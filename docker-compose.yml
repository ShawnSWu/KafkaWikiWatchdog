version: '2.1'
services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - watchdog-network

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://kafka1:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

#   Add security config after completion of development
    volumes:
      - './kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf'
      - './kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks'
      - './kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks'
    depends_on:
      - zoo1
    networks:
      - watchdog-network

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://kafka2:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

    #   Add security config after completion of development
    volumes:
      - './kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf'
      - './kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks'
      - './kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks'
    depends_on:
      - zoo1
    networks:
      - watchdog-network

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://kafka3:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

    #   Add security config after completion of development
    volumes:
      - './kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf'
      - './kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks'
      - './kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks'
    depends_on:
      - zoo1
    networks:
      - watchdog-network

  opensearch:
    image: opensearchproject/opensearch:1.2.4
    hostname: opensearch
    container_name: opensearch
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true" # disable https and logins
      compatibility.override_main_response_version: "true"
    ports:
      - 9200:9200
      - 9600:9600
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - watchdog-network

  # console at http://localhost:5601/app/dev_tools#/console
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:1.2.0
    ports:
      - 5601:5601
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    depends_on:
      - opensearch


  wiki_watchdog:
    hostname: wiki_watchdog
    build:
      context: .
      dockerfile: wiki-change-searchor-application/Dockerfile
    container_name: wiki_watchdog
    ports:
      - "8081:8081"
    depends_on:
      - opensearch
    networks:
      - watchdog-network

  opensearch_consumer:
    hostname: opensearch_consumer
    build:
      context: .
      dockerfile: opensearch-cousumer/Dockerfile
    container_name: opensearch_consumer
    ports:
      - "8082:8082"
    depends_on:
      - opensearch
      - zoo1
      - kafka1
      - kafka2
      - kafka3
    networks:
      - watchdog-network

  wikimedia_producer:
    hostname: wikimedia_producer
    build:
      context: .
      dockerfile: wikimedia-producer/Dockerfile
    container_name: wikimedia_producer
    ports:
      - "8083:8083"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - opensearch
    networks:
      - watchdog-network

networks:
  watchdog-network:
    driver: bridge